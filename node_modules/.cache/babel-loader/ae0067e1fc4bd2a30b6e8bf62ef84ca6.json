{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY Material\\\\React Js\\\\React Course\\\\textutils\\\\src\\\\Components\\\\TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  const words = () => {\n    let wordsArray = text.split(\" \");\n    let count = 0;\n    wordsArray.forEach(word => {\n      if (word !== \" \" && word !== \"\") {\n        count++;\n      }\n    });\n    return count;\n  };\n\n  const handleUpClick = () => {\n    // console.log(\"Uppercase was clicked \" + text);\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to UPPERCASE!\", \"success\");\n  };\n\n  const handleLoClick = () => {\n    // console.log(\"Uppercase was clicked \" + text);\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to lowercase!\", \"success\");\n  };\n\n  const handleclearClick = () => {\n    // console.log(\"Uppercase was clicked \" + text);\n    let newText = '';\n    setText(newText);\n    props.showAlert(\"Text cleard!\", \"success\");\n  };\n\n  const handleCopy = () => {\n    // console.log(\"I am Copy \" + text);\n    var text = document.getElementById(\"myBox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    props.showAlert(\"Copied to Clipboard!\", \"success\");\n  };\n\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Extra spaces removed!\", \"success\");\n  };\n\n  const handleOnChange = event => {\n    // console.log(\"OnChange was clicked\");\n    setText(event.target.value);\n  };\n\n  const [text, setText] = useState(''); // text = \"new text\"; //Wrongg way to change the state\n  // setText(\"new text\"); //Correct way to change the state\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'light' ? 'black' : 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          style: {\n            backgroundColor: props.mode === 'light' ? 'white' : '#36454F',\n            color: props.mode === 'light' ? 'black' : 'white'\n          },\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleUpClick,\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleLoClick,\n        children: \"Convert to Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleclearClick,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleCopy,\n        children: \"Copy Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleExtraSpaces,\n        children: \"Remove Extra Spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      style: {\n        color: props.mode === 'light' ? 'black' : 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length, \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(\" \").length, \" Minutes to read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Enter something in the textbox to preview it here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TextForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = TextForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"sources":["D:/MY Material/React Js/React Course/textutils/src/Components/TextForm.js"],"names":["React","useState","TextForm","props","words","wordsArray","text","split","count","forEach","word","handleUpClick","newText","toUpperCase","setText","showAlert","handleLoClick","toLowerCase","handleclearClick","handleCopy","document","getElementById","select","navigator","clipboard","writeText","value","handleExtraSpaces","join","handleOnChange","event","target","color","mode","heading","backgroundColor","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,QAAMC,KAAK,GAAG,MAAM;AAChB,QAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAW,GAAX,CAAjB;AACA,QAAIC,KAAK,GAAG,CAAZ;AACAH,IAAAA,UAAU,CAACI,OAAX,CAAmBC,IAAI,IAAI;AACvB,UAAIA,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAI,EAA5B,EAAgC;AAC5BF,QAAAA,KAAK;AACR;AACJ,KAJD;AAKA,WAAOA,KAAP;AACH,GATD;;AAYA,QAAMG,aAAa,GAAG,MAAI;AACtB;AACA,QAAIC,OAAO,GAAGN,IAAI,CAACO,WAAL,EAAd;AACAC,IAAAA,OAAO,CAACF,OAAD,CAAP;AACAT,IAAAA,KAAK,CAACY,SAAN,CAAgB,yBAAhB,EAA2C,SAA3C;AACH,GALD;;AAOA,QAAMC,aAAa,GAAG,MAAI;AACtB;AACA,QAAIJ,OAAO,GAAGN,IAAI,CAACW,WAAL,EAAd;AACAH,IAAAA,OAAO,CAACF,OAAD,CAAP;AACAT,IAAAA,KAAK,CAACY,SAAN,CAAgB,yBAAhB,EAA2C,SAA3C;AACH,GALD;;AAOA,QAAMG,gBAAgB,GAAG,MAAI;AACzB;AACA,QAAIN,OAAO,GAAG,EAAd;AACAE,IAAAA,OAAO,CAACF,OAAD,CAAP;AACAT,IAAAA,KAAK,CAACY,SAAN,CAAgB,cAAhB,EAAgC,SAAhC;AACH,GALD;;AAOA,QAAMI,UAAU,GAAG,MAAI;AACnB;AACA,QAAIb,IAAI,GAAGc,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAX;AACAf,IAAAA,IAAI,CAACgB,MAAL;AACAC,IAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BnB,IAAI,CAACoB,KAAnC;AACAvB,IAAAA,KAAK,CAACY,SAAN,CAAgB,sBAAhB,EAAwC,SAAxC;AACH,GAND;;AAQA,QAAMY,iBAAiB,GAAG,MAAI;AAC1B,QAAIf,OAAO,GAAGN,IAAI,CAACC,KAAL,CAAW,MAAX,CAAd;AACAO,IAAAA,OAAO,CAACF,OAAO,CAACgB,IAAR,CAAa,GAAb,CAAD,CAAP;AACAzB,IAAAA,KAAK,CAACY,SAAN,CAAgB,uBAAhB,EAAyC,SAAzC;AACH,GAJD;;AAMA,QAAMc,cAAc,GAAIC,KAAD,IAAS;AAC5B;AACAhB,IAAAA,OAAO,CAACgB,KAAK,CAACC,MAAN,CAAaL,KAAd,CAAP;AAEH,GAJD;;AAMA,QAAM,CAACpB,IAAD,EAAOQ,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC,CAtDoC,CAuDpC;AACA;;AACA,sBACI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAAC+B,QAAAA,KAAK,EAAE7B,KAAK,CAAC8B,IAAN,KAAa,OAAb,GAAqB,OAArB,GAA6B;AAArC,OAAlC;AAAA,8BACI;AAAA,kBAAK9B,KAAK,CAAC+B;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ,eAEA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACA;AAAU,UAAA,SAAS,EAAC,cAApB;AAAmC,UAAA,KAAK,EAAE5B,IAA1C;AAAgD,UAAA,QAAQ,EAAEuB,cAA1D;AAA0E,UAAA,KAAK,EAAE;AAACM,YAAAA,eAAe,EAAEhC,KAAK,CAAC8B,IAAN,KAAa,OAAb,GAAqB,OAArB,GAA6B,SAA/C;AAA0DD,YAAAA,KAAK,EAAE7B,KAAK,CAAC8B,IAAN,KAAa,OAAb,GAAqB,OAArB,GAA6B;AAA9F,WAAjF;AAAyL,UAAA,EAAE,EAAC,OAA5L;AAAoM,UAAA,IAAI,EAAC;AAAzM;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFA,eAKI;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAEtB,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAEK,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAEE,gBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAEC,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAEQ,iBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAYA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,KAAK,EAAE;AAACK,QAAAA,KAAK,EAAE7B,KAAK,CAAC8B,IAAN,KAAa,OAAb,GAAqB,OAArB,GAA6B;AAArC,OAAvC;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,mBAAI3B,IAAI,CAACC,KAAL,CAAW,GAAX,EAAgB6B,MAApB,iBAAuC9B,IAAI,CAAC8B,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,mBAAI,QAAQ9B,IAAI,CAACC,KAAL,CAAW,GAAX,EAAgB6B,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,kBAAI9B,IAAI,CAAC8B,MAAL,GAAY,CAAZ,GAAc9B,IAAd,GAAmB;AAAvB;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZA;AAAA,kBADJ;AAsBH;;GA/EuBJ,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const words = () => {\r\n        let wordsArray = text.split(\" \");\r\n        let count = 0;\r\n        wordsArray.forEach(word => {\r\n            if (word !== \" \" && word !==\"\") {\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    }\r\n\r\n\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UPPERCASE!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"Uppercase was clicked \" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n\r\n    const handleclearClick = ()=>{\r\n        // console.log(\"Uppercase was clicked \" + text);\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text cleard!\", \"success\");\r\n    }\r\n\r\n    const handleCopy = ()=>{\r\n        // console.log(\"I am Copy \" + text);\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"OnChange was clicked\");\r\n        setText(event.target.value);\r\n        \r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    // text = \"new text\"; //Wrongg way to change the state\r\n    // setText(\"new text\"); //Correct way to change the state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='light'?'black':'white'}}>\r\n            <h1>{props.heading }</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='light'?'white':'#36454F', color: props.mode==='light'?'black':'white'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleclearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='light'?'black':'white'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox to preview it here.\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}