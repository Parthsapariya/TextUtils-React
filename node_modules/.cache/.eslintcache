[{"D:\\MY Material\\React Js\\React Course\\TextUtils-React\\src\\index.js":"1","D:\\MY Material\\React Js\\React Course\\TextUtils-React\\src\\App.js":"2","D:\\MY Material\\React Js\\React Course\\TextUtils-React\\src\\reportWebVitals.js":"3","D:\\MY Material\\React Js\\React Course\\TextUtils-React\\src\\Components\\TextForm.js":"4","D:\\MY Material\\React Js\\React Course\\TextUtils-React\\src\\Components\\Alert.js":"5","D:\\MY Material\\React Js\\React Course\\TextUtils-React\\src\\Components\\Navbar.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":2019,"mtime":1630875082978,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2961,"mtime":1630847052123,"results":"11","hashOfConfig":"8"},{"size":462,"mtime":1630590567976,"results":"12","hashOfConfig":"8"},{"size":2202,"mtime":1630875248587,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g2rvy8",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"D:\\MY Material\\React Js\\React Course\\TextUtils-React\\src\\index.js",[],"D:\\MY Material\\React Js\\React Course\\TextUtils-React\\src\\App.js",[],"D:\\MY Material\\React Js\\React Course\\TextUtils-React\\src\\reportWebVitals.js",[],"D:\\MY Material\\React Js\\React Course\\TextUtils-React\\src\\Components\\TextForm.js",[],"D:\\MY Material\\React Js\\React Course\\TextUtils-React\\src\\Components\\Alert.js",[],"D:\\MY Material\\React Js\\React Course\\TextUtils-React\\src\\Components\\Navbar.js",["27","28"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> //this is used for routing */} \r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li>  */}\r\n            </ul>\r\n            <form className=\"d-flex\">\r\n              {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button> */}\r\n              <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps ={\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n};",{"ruleId":"29","severity":1,"message":"30","line":11,"column":11,"nodeType":"31","endLine":11,"endColumn":48},{"ruleId":"29","severity":1,"message":"30","line":19,"column":17,"nodeType":"31","endLine":19,"endColumn":77},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]