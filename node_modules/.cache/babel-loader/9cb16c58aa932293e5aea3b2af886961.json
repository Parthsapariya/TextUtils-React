{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY Material\\\\React Js\\\\React Course\\\\textutils\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport Alert from './Components/Alert';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState('light'); //Whether Dark mode is enable or not\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#002147';\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      document.title = 'TextUtils - DarkMode'; // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing Mode';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n      // document.body.style.color = 'white'\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\", \"success\");\n      document.title = 'TextUtils - LightMode'; // document.body.style.color = 'black'\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Enter the text to analyze\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/MY Material/React Js/React Course/textutils/src/App.js"],"names":["useState","Alert","About","Navbar","TextForm","BrowserRouter","Router","Switch","Route","Link","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;;;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,OAAD,CAAhC,CADa,CAC8B;;AAC3C,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMe,SAAS,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAiB;AAC7BH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,GAAG,EAAEF,OADE;AAEPC,MAAAA,IAAI,EAAEA;AAFC,KAAD,CAAR;AAIAE,IAAAA,UAAU,CAAC,MAAM;AACfL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGL,GARD;;AASA,QAAMM,UAAU,GAAG,MAAI;AACrB,QAAGT,IAAI,KAAK,OAAZ,EAAoB;AAClBC,MAAAA,OAAO,CAAC,MAAD,CAAP;AACAS,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,SAAtC;AACAT,MAAAA,SAAS,CAAC,4BAAD,EAA+B,SAA/B,CAAT;AACAM,MAAAA,QAAQ,CAACI,KAAT,GAAiB,sBAAjB,CAJkB,CAKlB;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAZD,MAaI;AACFb,MAAAA,OAAO,CAAC,OAAD,CAAP;AACAS,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;AACAT,MAAAA,SAAS,CAAC,6BAAD,EAAgC,SAAhC,CAAT;AACAM,MAAAA,QAAQ,CAACI,KAAT,GAAiB,uBAAjB,CAJE,CAKF;AACD;AACF,GArBD;;AAsBA,sBACI;AAAA,4BAEF,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,IAAI,EAAEd,IAAhC;AAAsC,MAAA,UAAU,EAAES;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFE,eAGF,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEP;AAAd;AAAA;AAAA;AAAA;AAAA,YAHE,eAIF;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACA,QAAC,MAAD;AAAA,gCACM,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADN,eAIM,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJN;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAUA,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEE,SAArB;AAAgC,QAAA,OAAO,EAAC,2BAAxC;AAAoE,QAAA,IAAI,EAAEJ;AAA1E;AAAA;AAAA;AAAA;AAAA,cAVA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJE;AAAA,kBADJ;AAmBD;;GAtDQD,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Alert from './Components/Alert';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //Whether Dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n        setAlert({\n          msg: message,\n          type: type\n        })\n        setTimeout(() => {\n          setAlert(null)\n        }, 1500);\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#002147';\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      document.title = 'TextUtils - DarkMode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing Mode';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n      // document.body.style.color = 'white'\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\", \"success\");\n      document.title = 'TextUtils - LightMode';\n      // document.body.style.color = 'black'\n    }\n  }\n  return (\n      <>\n    {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\"/> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n    </Switch>\n    {/* <About/> */}\n    <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode}/>\n    </div>\n      </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}