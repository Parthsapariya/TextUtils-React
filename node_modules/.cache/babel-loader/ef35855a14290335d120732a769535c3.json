{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY Material\\\\React Js\\\\React Course\\\\textutils\\\\src\\\\Components\\\\TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  const handleUpClick = () => {\n    // console.log(\"Uppercase was clicked \" + text);\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n\n  const handleLoClick = () => {\n    // console.log(\"Uppercase was clicked \" + text);\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n\n  const handleclearClick = () => {\n    // console.log(\"Uppercase was clicked \" + text);\n    let newText = '';\n    setText(newText);\n  };\n\n  const handleOnChange = event => {\n    // console.log(\"OnChange was clicked\");\n    setText(event.target.value);\n  };\n\n  const [text, setText] = useState(''); // text = \"new text\"; //Wrongg way to change the state\n  // setText(\"new text\"); //Correct way to change the state\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleUpClick,\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleLoClick,\n        children: \"Convert to Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleclearClick,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      \"my-3\": true,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length, \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(\" \").length, \" Minutes to read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TextForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = TextForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"sources":["D:/MY Material/React Js/React Course/textutils/src/Components/TextForm.js"],"names":["React","useState","TextForm","props","handleUpClick","newText","text","toUpperCase","setText","handleLoClick","toLowerCase","handleclearClick","handleOnChange","event","target","value","heading","split","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,QAAMC,aAAa,GAAG,MAAI;AACtB;AACA,QAAIC,OAAO,GAAGC,IAAI,CAACC,WAAL,EAAd;AACAC,IAAAA,OAAO,CAACH,OAAD,CAAP;AACH,GAJD;;AAMA,QAAMI,aAAa,GAAG,MAAI;AACtB;AACA,QAAIJ,OAAO,GAAGC,IAAI,CAACI,WAAL,EAAd;AACAF,IAAAA,OAAO,CAACH,OAAD,CAAP;AACH,GAJD;;AAMA,QAAMM,gBAAgB,GAAG,MAAI;AACzB;AACA,QAAIN,OAAO,GAAG,EAAd;AACAG,IAAAA,OAAO,CAACH,OAAD,CAAP;AACH,GAJD;;AAMA,QAAMO,cAAc,GAAIC,KAAD,IAAS;AAC5B;AACAL,IAAAA,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH,GAHD;;AAKA,QAAM,CAACT,IAAD,EAAOE,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CAxBoC,CAyBpC;AACA;;AACA,sBACI;AAAA,4BACA;AAAA,8BACI;AAAA,kBAAKE,KAAK,CAACa;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ,eAEA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACA;AAAU,UAAA,SAAS,EAAC,cAApB;AAAmC,UAAA,KAAK,EAAEV,IAA1C;AAAgD,UAAA,QAAQ,EAAEM,cAA1D;AAAyE,UAAA,EAAE,EAAC,OAA5E;AAAoF,UAAA,IAAI,EAAC;AAAzF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFA,eAKI;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAER,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAEK,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAEE,gBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAUA;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,kBAA3B;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,mBAAIL,IAAI,CAACW,KAAL,CAAW,GAAX,EAAgBC,MAApB,iBAAuCZ,IAAI,CAACY,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,mBAAI,QAAQZ,IAAI,CAACW,KAAL,CAAW,GAAX,EAAgBC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,kBAAIZ;AAAJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA,kBADJ;AAoBH;;GA/CuBJ,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"Uppercase was clicked \" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n\r\n    const handleclearClick = ()=>{\r\n        // console.log(\"Uppercase was clicked \" + text);\r\n        let newText = '';\r\n        setText(newText)\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"OnChange was clicked\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    // text = \"new text\"; //Wrongg way to change the state\r\n    // setText(\"new text\"); //Correct way to change the state\r\n    return (\r\n        <>\r\n        <div>\r\n            <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange}id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleclearClick}>Clear Text</button>\r\n        </div>\r\n        <div className=\"container\" my-3>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}